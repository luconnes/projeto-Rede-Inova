
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class player : MonoBehaviour{
    public float jumpForce;
    [SerializeField]
    bool isGrounded = false;
    Rigidbody2D RB;
    private void Awake()
    {   
        RB = GetComponent<Rigidbody2D>();
    }
    void Update(){
        if (Input.GetKeyDown(KeyCode.Space)){
            if(isGrounded == true){
             RB.AddForce(Vector2.up * jumpForce);
             isGrounded = false;      
            }
        }
    }
    private void OnCollisionEnter2D(Collision2D collision){
        if(collision.gameObject.CompareTag("ground")){
                if(isGrounded == false){
                    isGrounded = true;
                }
        }
    }
}









aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
SpikeGenerator

using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class SpikeGenerator : MonoBehaviour
{
    public GameObject spike;
    public float MinSpeed;
    public float MaxSpeed;
    public float currentSpeed;
    void Awake(){
        currentSpeed = MinSpeed;
        generateSpike();    
    }
    public void generateSpike(){
          GameObject SpikeIns = Instantiate(spike,transform.position,transform.rotation);
          SpikeIns.GetComponent<SpikeScript>().spikeGenerator= this;
    
    
}
}







aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
Spike
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class SpikeScript : MonoBehaviour
{
    public SpikeGenerator spikeGenerator;
    
    
    void Update(){
        trasnsform.Translate(Vector2.left * spikeGenerator.currentSpeed*Time.deltaTime);
    }
private void OnTriggerEnter2D(Collider2D collision){
    if(collision.gameObject.CompareTag("nextLine")){
        spikeGenerator.generateSpike();
        }    
    }
}
    


